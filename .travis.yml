jobs:
  include:
  - stage: Build

    sudo: required
    services:
    - docker
    script: docker build --build-arg CODECOV_TOKEN --build-arg "APP_VERSION=$(make version)" -t "vibioh/$(make name):$(make version)" .
    after_success:
    - echo "${DOCKER_PASS}" | docker login -u vibioh --password-stdin
    - docker push "vibioh/$(make name):$(make version)"

  - stage: Release

    language: go
    go: 1.12
    env:
      - GO111MODULE=on
      - GIT_TAG=${TRAVIS_TAG}
      - RELEASE_NAME=${TRAVIS_TAG}
    script: ./script/iot_release

  - stage: Publish

    sudo: required
    services:
    - docker
    script:
    - echo ${DOCKER_PASS} | docker login -u vibioh --password-stdin
    - docker pull "vibioh/$(make name):$(make version)"
    - docker tag "vibioh/$(make name):$(make version)" "vibioh/$(make name):latest"
    - docker push "vibioh/$(make name):latest"
    after_success:
    - curl -s -X POST https://goreportcard.com/checks?repo=github.com/ViBiOh/iot

  - stage: Deploy

    script: |
     sed \
        -e "s|\${BASIC_USERS}|${BASIC_USERS}|g" \
        -e "s/\${IOT_MQTT_SERVER}/${IOT_MQTT_SERVER}/g" \
        -e "s/\${IOT_MQTT_PORT}/${IOT_MQTT_PORT}/g" \
        -e "s/\${IOT_MQTT_USER}/${IOT_MQTT_USER}/g" \
        -e "s/\${IOT_MQTT_PASS}/${IOT_MQTT_PASS}/g" \
        -e "s|\\\$|\$\$|g" \
        docker-compose.yml > docker-compose-env.yml
    deploy:
      provider: script
      skip_cleanup: true
      script: bash script/deploy "$(make name)" "$(make version)" "@docker-compose-env.yml"

stages:
  - Build
  - name: Release
    if: tag =~ /^v\d+\.\d+\.\d+$/
  - name: Publish
    if: branch = master
  - name: Deploy
    if: branch = master

notifications:
  email: false
