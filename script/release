#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

readVariableIfRequired() {
  if [[ -z "${!1:-}" ]]; then
    read -p "${2:-${1}=}" "${1}"
  else
    echo "${1}="${!1}
  fi
}

main() {
  readVariableIfRequired GITHUB_REPOSITORY
  readVariableIfRequired ASSETS
  readVariableIfRequired GIT_TAG
  readVariableIfRequired RELEASE_NAME

  local RED='\033[0;31m'
  local GREEN='\033[0;32m'
  local BLUE='\033[0;34m'
  local RESET='\033[0m'

  git tag -f "${GIT_TAG}"

  echo -e "${BLUE}Creating release ${GIT_TAG} for ${GITHUB_REPOSITORY}...${RESET}"
  echo
  local HTTP_STATUS=$(curl \
    -H "Content-Type: application/json" \
    -H "Authorization: token ${GITHUB_OAUTH_TOKEN}" \
    -X POST \
    -o create.txt \
    -w "%{http_code}" \
    "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
    -d "{
      \"tag_name\": \"${GIT_TAG}\",
      \"name\": \"${RELEASE_NAME}\"
    }")

  if [[ "${HTTP_STATUS}" != "201" ]]; then
     echo -e "${RED}Failed to create Release${RESET}"
     cat create.txt
     exit 1
  fi

  local response_url=$(python -c 'import json; data = json.load(open("create.txt")); print(data["upload_url"])' | sed 's|{.*||')
  rm -rf create.txt

  for asset in ${ASSETS}; do
    echo -e "${BLUE}Uploading asset ${asset}...${RESET}"
    echo

    local HTTP_STATUS=$(curl \
      -H "Content-Type: application/x-executable" \
      -H "Authorization: token ${GITHUB_OAUTH_TOKEN}" \
      -X POST \
      -o upload.txt \
      -w "%{http_code}" \
      "${response_url}?name=$(basename ${asset})" \
      --data-binary "@${asset}")

    if [[ "${HTTP_STATUS}" != "201" ]]; then
       echo -e "${RED}Failed to upload asset ${asset}${RESET}"
       cat upload.txt
       exit 1
    fi
  done

  rm -rf upload.txt

  echo -e "${GREEN}Done!${RESET}"
}

main
